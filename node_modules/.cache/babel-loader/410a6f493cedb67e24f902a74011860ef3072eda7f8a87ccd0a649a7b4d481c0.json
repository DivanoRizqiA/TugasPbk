{"ast":null,"code":"import * as THREE from 'three';\nimport chartreux from '../../assets/cursus/chartreux.jpeg';\nimport epita from '../../assets/cursus/Epita.jpg';\nimport school42 from '../../assets/cursus/42.jpg';\nimport rouviere from '../../assets/cursus/paca.jpg';\nexport default {\n  name: \"Cube\",\n  components: {},\n  props: {\n    Textid: {\n      type: String,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      getTexture: function getTexture() {\n        if (this.Textid == \"chartreux\") {\n          return chartreux;\n        } else if (this.Textid == \"epita\") {\n          return epita;\n        } else if (this.Textid == \"school42\") {\n          return school42;\n        } else if (this.Textid == \"rouviere\") {\n          return rouviere;\n        }\n      }\n    };\n  },\n  mounted: function mounted() {\n    var canvas = this.$refs.canvas;\n    var container = canvas.parentNode;\n    var width = container.clientWidth;\n    var height = container.clientHeight;\n    // Création de la scène\n    // Création de la scène\n    var scene = new THREE.Scene();\n\n    // Création de la caméra\n    var camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    camera.position.z = 5;\n\n    // Création du rendu\n    var renderer = new THREE.WebGLRenderer({\n      canvas: this.$refs.canvas,\n      alpha: true\n    });\n    renderer.setSize(width, height);\n    //renderer.setClearColor(0x000000)\n    //scene.background.alpha = 0;\n    // Création du cube avec une texture personnalisée\n    var textureLoader = new THREE.TextureLoader();\n    var texture = textureLoader.load(this.getTexture());\n    var geometry = new THREE.BoxGeometry(2, 2, 2);\n    var material = new THREE.MeshBasicMaterial({\n      map: texture,\n      alphaTest: 1\n    });\n    material.alphaTest = 1;\n    var cube = new THREE.Mesh(geometry, material);\n    cube.rotation.x = Math.PI / 4;\n    cube.rotation.y = Math.PI / 4;\n    scene.add(cube);\n    var light = new THREE.DirectionalLight(0xffffff, 1);\n    light.position.set(0, 1, 1).normalize();\n    scene.add(light);\n\n    // Ajout d'un gestionnaire d'événement pour la rotation du cube à la souris\n    var mouseX = 0,\n      mouseY = 0;\n    document.addEventListener('mousemove', function (event) {\n      mouseX = event.clientX - window.innerWidth / 2;\n      mouseY = event.clientY - window.innerHeight / 2;\n    });\n\n    // Animation de la scène\n    var animate = function animate() {\n      requestAnimationFrame(animate);\n\n      // Mise à jour de la rotation du cube en fonction des mouvements de la souris\n      cube.rotation.x = mouseY * 0.005;\n      cube.rotation.y = mouseX * 0.005;\n      renderer.render(scene, camera);\n    };\n    animate();\n  }\n};","map":{"version":3,"names":["THREE","chartreux","epita","school42","rouviere","name","components","props","Textid","type","String","required","data","getTexture","mounted","canvas","$refs","container","parentNode","width","clientWidth","height","clientHeight","scene","Scene","camera","PerspectiveCamera","position","z","renderer","WebGLRenderer","alpha","setSize","textureLoader","TextureLoader","texture","load","geometry","BoxGeometry","material","MeshBasicMaterial","map","alphaTest","cube","Mesh","rotation","x","Math","PI","y","add","light","DirectionalLight","set","normalize","mouseX","mouseY","document","addEventListener","event","clientX","window","innerWidth","clientY","innerHeight","animate","requestAnimationFrame","render"],"sources":["D:\\folder penting\\portfolio-vue-main\\src\\components\\object\\Cube.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"canvas-container\">\n      <canvas ref=\"canvas\"></canvas>\n    </div>\n    <br>\n    <br>\n    <br>\n    </div>\n  </template>\n  \n  \n  <script>\n  import * as THREE from 'three';\n \n  import chartreux from '../../assets/cursus/chartreux.jpeg';\n  import epita from '../../assets/cursus/Epita.jpg';\n  import school42 from '../../assets/cursus/42.jpg'\n  import rouviere from '../../assets/cursus/paca.jpg'\n  export default {\n    name : \"Cube\",\n    components: {\n    },\n    props : {\n        Textid : {\n            type : String,\n            required : true\n        }\n\n    },\n    data(){\n      return {\n        getTexture(){\n          if(this.Textid == \"chartreux\"){\n            return chartreux;\n          }\n          else if(this.Textid == \"epita\"){\n            return epita;\n          }\n          else if(this.Textid == \"school42\"){\n            return school42;\n          }\n          else if(this.Textid == \"rouviere\"){\n            return rouviere;\n          }\n        }\n      }\n    },\n    mounted() {\n\n\n\nconst canvas = this.$refs.canvas;\n  const container = canvas.parentNode;\n  const width = container.clientWidth;\n  const height = container.clientHeight;\n  // Création de la scène\n// Création de la scène\nconst scene = new THREE.Scene();\n\n\n  // Création de la caméra\n  const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n  camera.position.z = 5\n\n  // Création du rendu\n  const renderer = new THREE.WebGLRenderer({ canvas: this.$refs.canvas , alpha: true})\n  renderer.setSize(width, height);\n  //renderer.setClearColor(0x000000)\n  //scene.background.alpha = 0;\n  // Création du cube avec une texture personnalisée\n  const textureLoader = new THREE.TextureLoader()\n  const texture = textureLoader.load(this.getTexture())\n  \n  const geometry = new THREE.BoxGeometry(2, 2, 2 )\n  const material = new THREE.MeshBasicMaterial({ map: texture , alphaTest : 1})\n  material.alphaTest = 1;\n  const cube = new THREE.Mesh(geometry, material)\n  cube.rotation.x = Math.PI / 4;\n  cube.rotation.y = Math.PI / 4;\n  scene.add(cube)\n  \n  \n  const light = new THREE.DirectionalLight(0xffffff, 1);\n  light.position.set(0, 1, 1).normalize();\n  scene.add(light);\n\n\n  // Ajout d'un gestionnaire d'événement pour la rotation du cube à la souris\n  let mouseX = 0, mouseY = 0\n  document.addEventListener('mousemove', (event) => {\n    mouseX = event.clientX - window.innerWidth / 2\n    mouseY = event.clientY - window.innerHeight / 2\n  })\n\n  // Animation de la scène\n  const animate = function () {\n    requestAnimationFrame(animate)\n\n    // Mise à jour de la rotation du cube en fonction des mouvements de la souris\n    cube.rotation.x = mouseY * 0.005\n    cube.rotation.y = mouseX * 0.005\n\n    renderer.render(scene, camera)\n    \n  }\n\n  animate()\n}\n\n,\n  };\n  </script>\n  \n  <style>\n    canvas {\n      width: 100%;\n      height: 100%;\n      display: block;\n    }\n\n    .canvas-container {\n  flex: 1;\n  width: 100%;\naspect-ratio: 1/-1;\npadding-bottom: -70%; \nbackground: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(141,141,193,1) 0%, rgba(120,144,217,1) 32%, rgba(95,193,225,1) 66%, rgba(50,65,239,1) 100%, rgba(0,212,255,1) 100%); \n\n}\n\n  </style>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}