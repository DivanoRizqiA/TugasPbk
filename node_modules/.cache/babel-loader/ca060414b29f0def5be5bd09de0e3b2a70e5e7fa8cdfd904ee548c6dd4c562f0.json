{"ast":null,"code":"export default {\n  setup: function setup() {},\n  data: function data() {\n    return {\n      FormatDesc: function FormatDesc() {}\n    };\n  },\n  props: {\n    XPName: {\n      type: String,\n      required: true\n    },\n    XPDescription: {\n      required: true\n    },\n    XPImg: {\n      type: String,\n      required: true\n    },\n    XPDate: {\n      type: String,\n      required: true\n    },\n    XPTech: {\n      type: String,\n      required: false\n    },\n    XPDeliver: {\n      type: String,\n      required: true\n    },\n    XPLieu: {\n      type: String,\n      required: true\n    }\n  }\n};","map":{"version":3,"names":["setup","data","FormatDesc","props","XPName","type","String","required","XPDescription","XPImg","XPDate","XPTech","XPDeliver","XPLieu"],"sources":["D:\\folder penting\\portfolio-vue-main\\src\\components\\object\\Experience.vue"],"sourcesContent":["<template>\n    <div class=\"xp-img\">\n        <img :src=\"require(`@/assets/xp/${XPImg}`)\">\n    \n    <div class=\"xp\">\n    <h3> {{ XPName  }} - {{ XPDate }} </h3>\n    <h4> {{ XPDeliver }}</h4>\n    <h4> {{ XPLieu }}</h4>\n    <h4  v-if=\"XPTech\"> Technologies utilis√©e(s) :  <span>{{ XPTech }} </span></h4>\n    <p v-html=\"XPDescription\"></p>\n    <br>\n    <br>\n    <br>\n    <br>\n</div>\n</div>\n</template>\n\n<script>\n\nexport default ({\n    setup() {\n        \n    },\n    data (){\n        return {\n            FormatDesc(){\n                \n            }\n        }\n    }\n    ,\n    props : {\n        XPName : {\n            type : String,\n            required : true\n        },\n        XPDescription : {\n            \n            required : true\n        },\n        XPImg : {\n            type : String,\n            required : true\n        },\n        XPDate : {\n            type : String,\n            required : true\n        },\n        XPTech : {\n            type : String,\n            required : false\n        },\n        XPDeliver : {\n            type : String,\n            required : true\n        },\n        XPLieu : {\n            type : String,\n            required : true\n        },\n\n    }\n})\n</script>\n\n\n<style scoped>\n\n.xp {\n  --b: .5em;\n  /* border width */\n  --c: 3em;\n  /* corner size */\n  --r: 2em;\n  /* corner rounding */\n  position: relative;\n  margin: 1em auto;\n  border: solid var(--b) transparent;\n  padding: 1em;\n  font: 1.25em ubuntu, sans-serif;\n}\n.xp::before {\n  position: absolute;\n  z-index: -1;\n  inset: calc(-1*var(--b));\n  border: inherit;\n  border-radius: var(--r);\n  background: linear-gradient(orange, deeppink, purple) border-box;\n  --corner:\n  \tconic-gradient(from -90deg at var(--c) var(--c), red 25%, #0000 0)\n  \t\t0 0/ calc(100% - var(--c)) calc(100% - var(--c)) border-box;\n  --inner: conic-gradient(red 0 0) padding-box;\n  -webkit-mask: var(--corner), var(--inner);\n  mask: var(--corner) subtract, var(--inner);\n  content: \"\";\n}\n.xp-img {\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n  text-align: left;\n}\n\n.xp-img img {\n  width: 300px;\n  height: 300px;\n  margin-right: 20px;\n}\n\n.xp {\n  flex: 1;\n  \n}\n\n.xp h3 {\n  font-size: 25px;\n  font-weight: bold;\n  margin-bottom: 10px;\n}\n\n.xp p {\n  font-size: 17px;\n  margin-bottom: 5px;\n}\n\n.xp p span {\n  font-weight: bold;\n}\n\n.xp a {\n  font-size: 18px;\n  text-decoration: none;\n  color: #0073b1;\n  display: inline-block;\n  margin-top: 10px;\n}\n\n\n\n\n</style>"],"mappings":"AAoBA,eAAgB;EACZA,KAAK,WAAAA,MAAA,EAAG,CAER,CAAC;EACDC,IAAG,WAAAA,KAAA,EAAI;IACH,OAAO;MACHC,UAAU,WAAAA,WAAA,EAAE,CAEZ;IACJ;EACJ;EAEAC,KAAI,EAAI;IACJC,MAAK,EAAI;MACLC,IAAG,EAAIC,MAAM;MACbC,QAAO,EAAI;IACf,CAAC;IACDC,aAAY,EAAI;MAEZD,QAAO,EAAI;IACf,CAAC;IACDE,KAAI,EAAI;MACJJ,IAAG,EAAIC,MAAM;MACbC,QAAO,EAAI;IACf,CAAC;IACDG,MAAK,EAAI;MACLL,IAAG,EAAIC,MAAM;MACbC,QAAO,EAAI;IACf,CAAC;IACDI,MAAK,EAAI;MACLN,IAAG,EAAIC,MAAM;MACbC,QAAO,EAAI;IACf,CAAC;IACDK,SAAQ,EAAI;MACRP,IAAG,EAAIC,MAAM;MACbC,QAAO,EAAI;IACf,CAAC;IACDM,MAAK,EAAI;MACLR,IAAG,EAAIC,MAAM;MACbC,QAAO,EAAI;IACf;EAEJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}